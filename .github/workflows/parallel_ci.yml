name: Parallel CI
on:
  workflow_call:
    secrets:
      SECRET_KEY_BASE:
        required: true
      SESSION_ENCRYPTED_COOKIE_SALT:
        required: true
      JWT_PRIVATE_KEY:
        required: true
      JWT_PUBLIC_KEY:
        required: true
      MDS_USERNAME:
        required: true
      MDS_PASSWORD:
        required: true
      AWS_REGION:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
jobs:
  parallel-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
          # set N-1 indexes for parallel jobs
          # When you run 2 parallel jobs then first job will have index 0, the second job will have index 1 etc
        ci_node_index: [0, 1, 2, 3, 4, 5, 6, 7]
        # Set N number of parallel jobs you want to run
        # Remember to update ci_node_index above to 0..N-1
        ci_node_total: [8]

    services:
      memcached:
        image: memcached:1.4.31
        ports:
          - 11211
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: datacite
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        ports:
          - 3306
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
        env:
          discovery.type: single-node
          ES_JAVA_OPTS: -Xms512m -Xmx512m
          ELASTIC_PASSWORD: changeme
          xpack.security.enabled: "false"
          http.cors.enabled: "true"
          http.cors.allow-origin: "*"
        ports:
          - 9200
    env:
      MYSQL_HOST: "127.0.0.1"
      MYSQL_DATABASE: datacite
      MYSQL_USER: root
      ES_HOST: "localhost:9200"
      ELASTIC_PASSWORD: "changeme"
      SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
      SESSION_ENCRYPTED_COOKIE_SALT: ${{ secrets.SESSION_ENCRYPTED_COOKIE_SALT }}
      JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
      JWT_PUBLIC_KEY: ${{ secrets.JWT_PUBLIC_KEY }}
      MDS_USERNAME: ${{ secrets.MDS_USERNAME }}
      MDS_PASSWORD: ${{ secrets.MDS_PASSWORD }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby 2.6
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
          CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
          CI_NODE_INDEX: ${{ matrix.ci_node_index }}
        run: |
          cp .env.build .env
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          bundle exec rails db:setup RAILS_ENV=test
      - name: Test
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
          ES_HOST: localhost:${{ job.services.elasticsearch.ports[9200] }}
          ELASTIC_PASSWORD: "changeme"
          MEMCACHE_SERVERS: localhost:${{ job.services.memcached.ports[11211] }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
          CI_NODE_INDEX: ${{ matrix.ci_node_index }}
          RAILS_ENV: test
        run: |
          bundle exec parallel_test spec/ -n $CI_NODE_TOTAL --only-group $CI_NODE_INDEX --type rspec
          echo $?
